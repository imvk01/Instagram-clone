{"ast":null,"code":"var _jsxFileName = \"/Volumes/HDD/React Projects/Insta-clone/src/PostCalling.js\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { db } from \"./firebase\";\n\nfunction PostCalling() {\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    //here the code runs \n    db.collection('posts').onSnapshot(snapshot => {\n      // snapshot whenever a new file come it will update the firebase\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"postCall\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, posts.map(({\n    id,\n    post\n  }) =>\n  /*#__PURE__*/\n  //instead of refreshing the whole project the KEY simply loads the new file that you add in the firestore database\n  React.createElement(Post, {\n    key: id,\n    username: post.username,\n    caption: post.caption,\n    imageUrl: post.imageUrl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default PostCalling;","map":{"version":3,"sources":["/Volumes/HDD/React Projects/Insta-clone/src/PostCalling.js"],"names":["React","useState","useEffect","Post","db","PostCalling","posts","setPosts","collection","onSnapshot","snapshot","docs","map","doc","id","post","data","username","caption","imageUrl"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,EAAT,QAAmB,YAAnB;;AAIA,SAASC,WAAT,GAAuB;AAErB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAE,IAAAA,EAAE,CAACI,UAAH,CAAc,OAAd,EAAuBC,UAAvB,CAAkCC,QAAQ,IAAI;AAC5C;AACAH,MAAAA,QAAQ,CAACG,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAkBC,GAAG,KAAK;AACjCC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADyB;AAEjCC,QAAAA,IAAI,EAAEF,GAAG,CAACG,IAAJ;AAF2B,OAAL,CAArB,CAAD,CAAR;AAID,KAND;AAOD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGIV,KAAK,CAACM,GAAN,CAAU,CAAC;AAAEE,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD;AAAA;AACR;AACA,sBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,EAAX;AAAe,IAAA,QAAQ,EAAEC,IAAI,CAACE,QAA9B;AAAwC,IAAA,OAAO,EAAEF,IAAI,CAACG,OAAtD;AAA+D,IAAA,QAAQ,EAAEH,IAAI,CAACI,QAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHJ,CADF;AAaD;;AAED,eAAed,WAAf","sourcesContent":["import React from 'react'\nimport { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport { db } from \"./firebase\";\n\n\n\nfunction PostCalling() {\n\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    //here the code runs \n    db.collection('posts').onSnapshot(snapshot => {\n      // snapshot whenever a new file come it will update the firebase\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })))\n    })\n  }, []);\n\n  return (\n    <div className='postCall'>\n\n      {\n        posts.map(({ id, post }) => (\n          //instead of refreshing the whole project the KEY simply loads the new file that you add in the firestore database\n          <Post key={id} username={post.username} caption={post.caption} imageUrl={post.imageUrl} />\n        ))\n\n      }\n\n    </div>\n  )\n}\n\nexport default PostCalling;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}
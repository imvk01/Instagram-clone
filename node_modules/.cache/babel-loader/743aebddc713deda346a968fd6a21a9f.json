{"ast":null,"code":"var _jsxFileName = \"/Users/vkvermavk96/Downloads/mern-instagram-master/src/Post.js\";\nimport React, { useState, useEffect, forwardRef } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { Button, Input } from \"@material-ui/core\";\nconst Post = forwardRef(({\n  user,\n  username,\n  postId,\n  imageUrl,\n  caption\n}, ref) => {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = e => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName\n    });\n    setComment(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__avatar\",\n    alt: username,\n    src: \"/static/images/avatar/1.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post__image\",\n    src: imageUrl,\n    alt: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post__text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, username, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"post__caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 22\n    }\n  }, caption)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, comment.username), \" \", comment.text))), user && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post__commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"post__input\",\n    type: \"text\",\n    placeholder: \"Add a comment...\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    disabled: !comment,\n    className: \"post__button\",\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Post\")));\n});\nexport default Post;","map":{"version":3,"sources":["/Users/vkvermavk96/Downloads/mern-instagram-master/src/Post.js"],"names":["React","useState","useEffect","forwardRef","Avatar","db","firebase","Button","Input","Post","user","username","postId","imageUrl","caption","ref","comments","setComments","comment","setComment","unsubscribe","collection","doc","onSnapshot","snapshot","docs","map","data","postComment","e","preventDefault","add","text","displayName","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from \"react\";\nimport \"./Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from \"./firebase\";\nimport firebase from \"firebase\";\nimport { Button , Input} from \"@material-ui/core\";\n\nconst Post = forwardRef(\n  ({ user, username, postId, imageUrl, caption }, ref) => {\n    const [comments, setComments] = useState([]);\n    const [comment, setComment] = useState(\"\");\n\n    useEffect(() => {\n      let unsubscribe;\n      if (postId) {\n        unsubscribe = db\n          .collection(\"posts\")\n          .doc(postId)\n          .collection(\"comments\")\n          .onSnapshot((snapshot) => {\n            setComments(snapshot.docs.map((doc) => doc.data()));\n          });\n      }\n\n      return () => {\n        unsubscribe();\n      };\n    }, [postId]);\n\n    const postComment = (e) => {\n      e.preventDefault();\n\n      db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n        text: comment,\n        username: user.displayName,\n      });\n      setComment(\"\");\n    };\n\n    return (\n      <div className=\"post\" ref={ref}>\n        <div className=\"post__header\">\n          <Avatar\n            className=\"post__avatar\"\n            alt={username}\n            src=\"/static/images/avatar/1.jpg\"\n          />\n          <h3>{username}</h3>\n        </div>\n\n        <img className=\"post__image\" src={imageUrl} alt=\"post\" />\n        <h4 className=\"post__text\">\n          {username} <span className=\"post__caption\">{caption}</span>\n        </h4>\n\n        <div className=\"post__comments\">\n          {comments.map((comment) => (\n            <p>\n              <b>{comment.username}</b> {comment.text}\n            </p>\n          ))}\n        </div>\n\n        {user && (\n          <form className=\"post__commentBox\">\n            <Input\n              className=\"post__input\"\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <Button\n              disabled={!comment}\n              className=\"post__button\"\n              type=\"submit\"\n              onClick={postComment}\n            >\n              Post\n            </Button>\n          </form>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}